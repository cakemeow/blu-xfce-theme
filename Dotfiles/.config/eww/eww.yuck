;; Warning: Obscure code ahead

;; ***** Variables *******************************************************************

	;;  Resource vars 
	(defpoll CPU_USAGE :interval "1s"  "~/.config/eww/scripts/sys_info --cpu")
	(defpoll MEM_USAGE :interval "1s"  "~/.config/eww/scripts/sys_info --mem")
	(defpoll DISK_USAGE :interval "1s"  "~/.config/eww/scripts/sys_info --disk")
	(defpoll brightness :interval "1s" "~/.config/eww/scripts/sys_info --blight")
	(defpoll volume :interval "1s" "~/.config/eww/scripts/sys_info --vol")
	(defpoll micro :interval "1s" "~/.config/eww/scripts/sys_info --micro")
	(defpoll BAT_PERCENTAGE :interval "1s" "cat /sys/class/power_supply/BAT1/capacity")
	(defpoll BAT_ICON :interval "1s" "~/.config/eww/scripts/battery --icon")
	(defpoll BAT_STATUS :interval "1s" "cat /sys/class/power_supply/BAT1/status")

	;; Weather vars
	(defpoll weathericon :interval "1h" "~/.config/eww/scripts/weather --icon")
	(defpoll tempt :interval "1h" "~/.config/eww/scripts/weather --temp" )
	(defpoll descr :interval "1h" "~/.config/eww/scripts/weather --desc")

	;; Date vars
	(defpoll date :interval "1s"  "date '+%d'")
	(defpoll month :interval "1s"  "date '+%b'")
	(defpoll day :interval "1s"  "date '+%A'")

	;; Username
	(defpoll USERNAME :interval "69420s" `whoami`)

	;; Available updates (FOR PACMAN ONLY)
	(defpoll UPDATES :interval "900s" `checkupdates | wc -l`)

	;; Before my SSC exam :)
	(defpoll beforeSSC :interval "43200s" `~/.config/eww/scripts/ssc`)

;;  ******************************************************************************** 

;;	weather
(defwidget weather [] 
	(box :class "genwin"
  		(box :orientation "v"
  		  	 :space-evenly "false"
  		  	 :valign "center"

			(label  :class "title"
					:wrap "true"
					:text descr
					:halign "start")

			(box :orientation "h"
				 :space-evenly "true"

				 (box :halign "start"
					(label  :class "description"
							:text "${tempt}°C"))

				 (box :halign "end" 
					(label  :class "weathicon"
							:text "${weathericon} "))
			)
		)
	)
)


;; Memory
(defwidget memory [] 
	(box :class "genwin"
		 :space-evenly "true"

		(box :orientation "v"
			 :space-evenly "false"
			 :valign "center"
			 :halign "center"
			 :spacing 15
		(label  :text "Memory: ${MEM_USAGE}%"
				:class "title")

			(box :class "res-circle"
			 	 :valign "center"
			 	 :halign "center"
				(circular-progress  :class "res-mem"
									:value MEM_USAGE
									:thickness 4
					(label  :class "res-circle-small"
							:text "")
				)
			)
		)
	)
)


;; Battery
(defwidget battery [] 
	(box :class "genwin"
		 :space-evenly "true"
		 :orientation "v"

		(box :orientation "v"
			 :space-evenly "false"
			 :valign "center"
			 :halign "center"
			 :spacing 15

			(label  :text "${BAT_PERCENTAGE}%, ${BAT_STATUS}"
					:class "title")

			(box :class "res-circle"
			 	 :valign "center"
			 	 :halign "center"
				(circular-progress  :class "res-bat"
									:value BAT_PERCENTAGE
									:thickness 4
					(label  :class "res-circle-small"
							:text "${BAT_ICON}")
				)
			)
		)
	)
)


;;	Date
(defwidget date []
    (box :class "genwin"
    	 (box 	:orientation "v"
    	 		:space-evenly "false"
    	 		:halign "start"
    	 		:valign "center"

    	 		(label  :text "${day}"
    	 				:halign "start"
    	 				:class "title")

        		(label  :text "${month} ${date}"
        				:class "description"
        				:halign "start")
        )
    )
)


;;	Before my damn exam starts
(defwidget beforeExam []
    (box :class "genwin"
    	(box :orientation "v"
    	 	 :space-evenly "false"
    	 	 :halign "start"
    	 	 :valign "center"
    	 	(label  :text "Before SSC"
    	 	 		:halign "start"
    	 	 		:class "title")
        	(label  :text "${beforeSSC} days :)"
        			:class "description"
        			:halign "start")
        )
    )
)


;;	Updates
(defwidget updates []
    (box :class "genwin"
    	(box :orientation "v"
    	 	 :space-evenly "false"
    	 	 :halign "start"
    	 	 :valign "center"
    	 	(label  :text "Updates"
    	 			:halign "start"
    	 			:class "title")
        	(label  :text "${UPDATES} available"
        			:class "description"
        			:halign "start")
        )
    )
)


;; Profile
(defwidget profile []
	(box :class "genwin"
    	(box :orientation "v"
    	 	:valign "center"
    	 	:halign "center"
    	 	:space-evenly "false"
    	 	:spacing 10
      		(image  :path "images/avatar.png"
      				:image-width 48
      				:class "profile-picture")
        	(label  :text "${USERNAME}"
        			:class "description"
        	)
        )
    )
)


;; Directories
(defwidget dirs []
	(box :class "genwin"
		 :orientation "h"
		 :space-evenly false

		(box :orientation "v"
         	 :halign "center"
         	 :valign "center"
         	 :space-evenly false
         	 :class "disk-usage-box"
         	 :spacing 5
      		(label  :text ""
      				:class "disk-usage-icon")
      		(label  :text "${DISK_USAGE} "
            		:class "disk-usage-value")
        )

		(box :orientation "v"
			 :spacing 3
		 	 :halign "center"
		 	 :valign "center"
		 	 :class "dirs"

		 	(button :onclick "scripts/opendir --path ~/Desktop" 
      				(label  :text " →   ~/Desktop"
             				:halign "start"))
            (button :onclick "scripts/opendir --path ~/Documents" 
      				(label  :text " →   ~/Documents"
             				:halign "start"))
            (button :onclick "scripts/opendir --path ~/Downloads" 
      				(label  :text " →   ~/Downloads"
             				:halign "start"))
    		(button :onclick "scripts/opendir --path ~/.config" 
      				(label  :text " →   ~/.config"
             				:halign "start"))
		)
	)
)


;; System stuffs
(defwidget system []
	(box :class "genwin system"

		(box :orientation "v"
   			 :halign "center"
   			 :valign "center"
   			 :spacing 12

			(box :orientation "h"
				 :space-evenly "false"
				(label  :class "volume-icon"
						:text " ")
                (scale  :min 0
                        :max 101
                        :value volume
                        :orientation "h"
                        :onchange "amixer -D pulse sset Master {}%"
                        :class "volbar"
                )
			)

			(box :orientation "h"
				 :space-evenly "false"
				(label  :class "brightness-icon"
						:text " ")
				(scale  :min 0
						:max 101
						:value brightness
						:orientation "h"
						:onchange "brightnessctl set {}%"
						:class "bribar"
				)
			)

			(box :orientation "h"
				 :space-evenly "false"
				(label  :class "mic-icon"
						:text " ")
				(scale  :min 0
						:max 101
						:value micro
						:orientation "h"
						:onchange "amixer -D pulse sset Capture {}%"
						:class "micbar"
				)
			)
		)
	)
)


;;  ********************************************************************************


;; The sidebar itself
(defwidget sidebar []

	(box :class "container"
		 :orientation "v"
		 :space-evenly false

		(box :orientation "h"
			 :space-evenly false
			(box :width 170
				 :height 340
				 :orientation "v"
				 :space-evenly false
				(box :height 170
			 		(profile))
				(box :height 170
					(memory))
			)

			(box :width 170
				 :height 340
				 :orientation "v"
				 :space-evenly false
				(box :height 85
					(date))
				(box :height 170
			 		(battery))
				(box :height 85
					(weather))
			)
		)

        (box :orientation "v"
         	(system)
         )

		(box :orientation "v"
         	(dirs)
         )

        (box :orientation "h"
        	 :space-evenly "false"
        	 :height 85

        	(box :width 170
        	 	 (beforeExam)
        	)

        	(box :width 170
        	 	 (updates)
        	)
        )
	)
)


(defwindow sidebar :stacking "fg"
				  :focusable "false"
				  :screen 1
				  :windowtype "dock"
	    		  :geometry (geometry   :x 0
	    								:y 0
	    								:anchor "center left")
					(sidebar)
)