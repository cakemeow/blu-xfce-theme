#!/bin/bash

# Thanks to whoever I've copied the codes from, probably Dharmx if I'm remembering it correct

echoSongArt() {
    echo "$HOME/.cache/eww/spotify/cover.png"
}

getSongArt() {
    tmp_dir="$HOME/.cache/eww/spotify"
    tmp_cover_path=$tmp_dir/cover.png
    tmp_temp_path=$tmp_dir/temp.png

    if [ ! -d $tmp_dir ]; then
        mkdir -p $tmp_dir
    fi

    artlink="$(playerctl -p spotify metadata mpris:artUrl | sed -e 's/open.spotify.com/i.scdn.co/g')"

    if [ $(playerctl -p spotify metadata mpris:artUrl) ]; then
        curl -s "$artlink" --output $tmp_temp_path
    else
        cp $HOME/.config/eww/assets/fallback.png $tmp_temp_path
    fi

    # an epic effekt
    # convert $tmp_temp_path -alpha set -channel A -evaluate multiply 0.3  $tmp_cover_path
    convert $tmp_temp_path -gravity center +repage -alpha set -channel A \
        -sparse-color Barycentric '%[fx:w*2/32],0 opaque  %[fx:w+0.5],0 transparent' \
        -evaluate multiply 0.5 \
        $tmp_cover_path
}

getSongArtist() {
    artist=$(playerctl -p spotify metadata --format '{{ artist }}')
    title=$(playerctl -p spotify metadata --format '{{ title }}')
    count=$(echo -n "$artist" | wc -c)

    # Check if $title is "Advertisement"
    if [ "$title" = "Advertisement" ]; then
        echo "Spotify"
    else
        if [ -z "$artist" ]; then
            echo "Unknown Artist";
        else
            echo $artist
        fi
    fi
}

getSongTitle() {
    title=$(playerctl -p spotify metadata --format '{{ title }}')
    count=$(echo -n "$title" | wc -c)

    if [ -z "$title" ]; then
        echo "Not Playing";
    else
        if [ "$count" -le 24 ]; then
            echo $title
        else    
            if [[ "$title" =~ ^[一-龠]+|[ぁ-ゔ]+|[ァ-ヴー]+ ]]; then
                echo $(playerctl metadata --format '{{ title }}' | awk '{ print substr($1, 1, 15) }')...
            else
                echo $(playerctl metadata --format '{{ title }}' | awk '{print $1, $2, $3, substr($4, 1, 5)}')...
            fi
        fi
    fi
}

getPlayerStatus() {
    # A dwm_bar function that shows the current artist, track, duration, and status from Spotify using playerctl
    # Joe Standring <git@joestandring.com>
    # GNU GPLv3

    if ps -C spotify > /dev/null; then
        PLAYER="spotify"
    fi

    if [ -z "$PLAYER" ]; then
        printf ""
    fi

    if [ "$PLAYER" = "spotify" ]; then
        STATUS=$(playerctl -p spotify status)

        if [ "$STATUS" = "Playing" ]; then
            STATUS=""
        else
            STATUS=""
        fi
    
        if [ "$PLAYER" = "spotify" ]; then
            printf "$STATUS"
        fi
    fi
}

case $1 in
    --echo_song_art) echoSongArt ;;
    --get_song_art) getSongArt ;;
    --get_song_artist) getSongArtist ;;
    --get_song_title) getSongTitle ;;
    --get_player_status) getPlayerStatus ;;
esac